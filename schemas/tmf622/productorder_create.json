{
  "type": "object",
  "description": "A Product Order is a type of order which  can  be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa,\nSkipped properties: id,href,completionDate,orderDate,state,expectedCompletionDate,productOrderItem.state",
  "required": [
    "productOrderItem"
  ],
  "properties": {
    "cancellationDate": {
      "type": "string",
      "format": "date-time",
      "description": "Date when the order is cancelled. This is used when order is cancelled. "
    },
    "cancellationReason": {
      "type": "string",
      "description": "Reason why the order is cancelled. This is used when order is cancelled. "
    },
    "category": {
      "type": "string",
      "description": "Used to categorize the order from a business perspective that can be useful for the OM system (e.g. \"enterprise\", \"residential\", ...)"
    },
    "description": {
      "type": "string",
      "description": "Description of the product order"
    },
    "externalId": {
      "type": "string",
      "description": "ID given by the consumer and only understandable by him (to facilitate his searches afterwards)"
    },
    "notificationContact": {
      "type": "string",
      "description": "Contact attached to the order to send back information regarding this order"
    },
    "priority": {
      "type": "string",
      "description": "A way that can be used by consumers to prioritize orders in OM system (from 0 to 4 : 0 is the highest priority, and 4 the lowest)"
    },
    "requestedCompletionDate": {
      "type": "string",
      "format": "date-time",
      "description": "Requested delivery date from the requestor perspective"
    },
    "requestedStartDate": {
      "type": "string",
      "format": "date-time",
      "description": "Order fulfillment start date wished by the requestor. This is used when, for any reason, requestor cannot allow seller to begin to operationally begin the fulfillment before a date. "
    },
    "agreement": {
      "type": "array",
      "items": {
        "$ref": "_definitions.json#/definitions/AgreementRef"
      },
      "description": "A reference to an agreement defined in the context of the product order"
    },
    "billingAccount": {
      "$ref": "_definitions.json#/definitions/BillingAccountRef"
    },
    "channel": {
      "type": "array",
      "items": {
        "$ref": "_definitions.json#/definitions/RelatedChannel"
      }
    },
    "note": {
      "type": "array",
      "items": {
        "$ref": "_definitions.json#/definitions/Note"
      }
    },
    "orderTotalPrice": {
      "type": "array",
      "items": {
        "$ref": "_definitions.json#/definitions/OrderPrice"
      }
    },
    "payment": {
      "type": "array",
      "items": {
        "$ref": "_definitions.json#/definitions/PaymentRef"
      }
    },
    "productOfferingQualification": {
      "type": "array",
      "items": {
        "$ref": "_definitions.json#/definitions/ProductOfferingQualificationRef"
      }
    },
    "productOrderItem": {
      "type": "array",
      "items": {
        "$ref": "_definitions.json#/definitions/ProductOrderItem"
      },
      "minItems": 1
    },
    "quote": {
      "type": "array",
      "items": {
        "$ref": "_definitions.json#/definitions/QuoteRef"
      }
    },
    "relatedParty": {
      "type": "array",
      "items": {
        "$ref": "_definitions.json#/definitions/RelatedParty"
      }
    },
    "@baseType": {
      "type": "string",
      "description": "When sub-classing, this defines the super-class"
    },
    "@schemaLocation": {
      "type": "string",
      "format": "uri",
      "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
    },
    "@type": {
      "type": "string",
      "description": "When sub-classing, this defines the sub-class entity name"
    }
  },
  "$schema": "http://json-schema.org/schema#"
}